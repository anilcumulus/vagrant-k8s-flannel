#!/bin/bash

echo 'nameserver 8.8.8.8' > /etc/resolv.conf

echo 'Add docker repo'
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
echo 'Add kuber repo'
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
add-apt-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
echo 'Install packages'
apt-get update
apt-get -y --allow-unauthenticated install docker-ce=5:18.09.9~3-0~ubuntu-bionic docker-ce-cli=5:18.09.9~3-0~ubuntu-bionic kubeadm=1.16.2-00 kubelet=1.16.2-00 kubectl=1.16.2-00 kubernetes-cni=0.7.5-00 bridge-utils

rm -f /home/vagrant/.kube/config

iptables -t nat -F
iptables -F 
iptables -X

echo 'Delete the docker bridge'
ip link set docker0 down
ip link delete docker0

echo 'Start the cluster'
kubeadm --apiserver-advertise-address=172.16.1.100 --pod-network-cidr=10.244.0.0/16 --token=anilre.soopersecrethere init
mkdir -p /home/vagrant/.kube
cp /etc/kubernetes/admin.conf /home/vagrant/.kube/config
chmod 777 /home/vagrant/.kube/config
chown 1000:1000 /home/vagrant/.kube/config

echo 'Update kubeadm.conf and restart kubelet'
cat <<EOF > /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
[Service]
Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
Environment="KUBELET_SYSTEM_PODS_ARGS=--pod-manifest-path=/etc/kubernetes/manifests"
Environment="KUBELET_NETWORK_ARGS=--network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin"
Environment="KUBELET_DNS_ARGS=--cluster-dns=10.96.0.10 --cluster-domain=cluster.local"
Environment="KUBELET_AUTHZ_ARGS=--authorization-mode=Webhook --client-ca-file=/etc/kubernetes/pki/ca.crt"
Environment="KUBELET_CERTIFICATE_ARGS=--rotate-certificates=true --cert-dir=/var/lib/kubelet/pki"
Environment="KUBELET_NODE_IP_ARGS=--node-ip=172.16.1.100"
ExecStart=
ExecStart=/usr/bin/kubelet \$KUBELET_KUBECONFIG_ARGS \$KUBELET_SYSTEM_PODS_ARGS \$KUBELET_NETWORK_ARGS \$KUBELET_DNS_ARGS \$KUBELET_AUTHZ_ARGS \$KUBELET_CERTIFICATE_ARGS \$KUBELET_EXTRA_ARGS \$KUBELET_NODE_IP_ARGS
EOF

systemctl daemon-reload
systemctl restart kubelet.service
